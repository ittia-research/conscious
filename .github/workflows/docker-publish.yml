name: Build and Push Docker Images

on:
  push:
    branches: [ main ] # Trigger on pushes to the main branch
  release:
    types: [ created ] # Trigger when a new release is created

env:
  REGISTRY: ghcr.io
  # Single image repository name: ghcr.io/ittia-research/conscious
  IMAGE_NAME: ghcr.io/${{ github.repository }}

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write # Permissions to push to ghcr.io

    # Use a matrix strategy to build each component
    strategy:
      matrix:
        component: [database, backend, frontend, nginx] # List of components

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Log in to the GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract Docker metadata and generate tags
        id: meta
        uses: docker/metadata-action@v5
        with:
          # Set the single image repository name
          images: ${{ env.IMAGE_NAME }}
          # Define tagging strategy: append component name
          tags: |
            # type=raw allows custom tag construction including the matrix variable
            # Tag: latest-<component> for pushes to the default branch (main)
            # Example: latest-database
            type=raw,value=latest-${{ matrix.component }},enable={{is_default_branch}}

            # Tag: <git_tag>-<component> for release/tag events
            # Example: v1.0.0-database
            # type=ref,event=tag,prefix=,suffix=-${{ matrix.component }}

            # Semver tags (like 1.0.0 instead of v1.0.0)
            type=semver,pattern={{version}}-${{ matrix.component }}

      - name: Build and push Docker image for ${{ matrix.component }}
        uses: docker/build-push-action@v5
        with:
          context: .
          # Specify the Dockerfile path dynamically
          file: ./app/${{ matrix.component }}/Dockerfile
          push: true
          # Use the tags generated by the metadata action (which now include the component)
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }} # Adds git sha, etc. as labels
          cache-from: type=gha
          cache-to: type=gha,mode=max